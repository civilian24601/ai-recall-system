[
    {
      "id": "log_2025-02-12_090000",
      "timestamp": "2025-02-12 09:00:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'math_ops_mock.py', line 12, in divide_numbers",
      "fix_attempted": "def divide_numbers(a, b):\n    if b == 0: return None\n    return a / b",
      "fix_successful": true,
      "execution_time": 2.3,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_090100",
      "timestamp": "2025-02-12 09:01:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 22, in login_user",
      "fix_attempted": "def login_user(data):\n    return data.get('username', 'guest')",
      "fix_successful": false,
      "execution_time": 1.9,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_090200",
      "timestamp": "2025-02-12 09:02:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_handler_mock.py', line 30, in connect",
      "fix_attempted": "def fix_db_timeout():\n    print('Timeout set to 120s')\n    return True",
      "fix_successful": true,
      "execution_time": 3.0,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_090300",
      "timestamp": "2025-02-12 09:03:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'api_predict_mock.py', line 18, in run_prediction",
      "fix_attempted": "import joblib\nmodel = joblib.load('model.pkl')\nprint(model.predict([1,2,3]))",
      "fix_successful": false,
      "execution_time": 2.5,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_090400",
      "timestamp": "2025-02-12 09:04:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 10, in combine_data",
      "fix_attempted": "def combine_data(a, b):\n    return str(a) + str(b)",
      "fix_successful": true,
      "execution_time": 1.8,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_090500",
      "timestamp": "2025-02-12 09:05:00",
      "error": "ValueError: invalid literal for int()",
      "stack_trace": "File 'conversion_mock.py', line 14, in parse_int",
      "fix_attempted": "def parse_int(val):\n    try:\n        return int(val)\n    except ValueError:\n        return 0",
      "fix_successful": true,
      "execution_time": 2.1,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_090600",
      "timestamp": "2025-02-12 09:06:00",
      "error": "Catastrophic meltdown: memory overflow",
      "stack_trace": "File 'aggregator_mock.py', line 45, in handle_data",
      "fix_attempted": "def handle_data(data):\n    # Introduce streaming approach\n    pass",
      "fix_successful": false,
      "execution_time": 4.2,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_090700",
      "timestamp": "2025-02-12 09:07:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'calc_metrics_mock.py', line 22, in ratio_calc",
      "fix_attempted": "def ratio_calc(x, y):\n    return x / y if y != 0 else None",
      "fix_successful": false,
      "execution_time": 2.7,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_090800",
      "timestamp": "2025-02-12 09:08:00",
      "error": "Catastrophic meltdown: index out of range",
      "stack_trace": "File 'array_ops_mock.py', line 33, in fetch_item",
      "fix_attempted": "def fetch_item(arr, idx):\n    if idx >= len(arr): return None\n    return arr[idx]",
      "fix_successful": true,
      "execution_time": 3.5,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_090900",
      "timestamp": "2025-02-12 09:09:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 38, in process_user",
      "fix_attempted": "def process_user(d):\n    if 'username' not in d:\n        d['username'] = 'guest'\n    return d['username']",
      "fix_successful": true,
      "execution_time": 1.6,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091000",
      "timestamp": "2025-02-12 09:10:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_handler_mock.py', line 50, in connect",
      "fix_attempted": "def connect_db():\n    # add retry\n    return True",
      "fix_successful": true,
      "execution_time": 3.4,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091100",
      "timestamp": "2025-02-12 09:11:00",
      "error": "ValueError: invalid literal for int()",
      "stack_trace": "File 'conversion_mock.py', line 9, in parse_data",
      "fix_attempted": "def parse_data(val):\n    return int(val) if val.isdigit() else -1",
      "fix_successful": false,
      "execution_time": 2.2,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_091200",
      "timestamp": "2025-02-12 09:12:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'predict_ai_mock.py', line 10, in run_inference",
      "fix_attempted": "def setup_model():\n    global model\n    model = load_model()",
      "fix_successful": true,
      "execution_time": 2.9,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091300",
      "timestamp": "2025-02-12 09:13:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 41, in combine_values",
      "fix_attempted": "def combine_values(a, b):\n    return str(a) + str(b)",
      "fix_successful": true,
      "execution_time": 1.7,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091400",
      "timestamp": "2025-02-12 09:14:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'math_ops_mock.py', line 55, in compute_stat",
      "fix_attempted": "def compute_stat(a, b):\n    if b==0: return 0\n    return a / b",
      "fix_successful": true,
      "execution_time": 2.5,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091500",
      "timestamp": "2025-02-12 09:15:00",
      "error": "Catastrophic meltdown: recursion depth exceeded",
      "stack_trace": "File 'deep_call_mock.py', line 99, in deep_func",
      "fix_attempted": "def limit_recursion():\n    import sys\n    sys.setrecursionlimit(1000)",
      "fix_successful": false,
      "execution_time": 4.5,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_091600",
      "timestamp": "2025-02-12 09:16:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 51, in authenticate_user",
      "fix_attempted": "def authenticate_user(d):\n    return d.get('username', None)",
      "fix_successful": true,
      "execution_time": 1.9,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_091700",
      "timestamp": "2025-02-12 09:17:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_mock.py', line 12, in open_db",
      "fix_attempted": "def open_db():\n    # set connect_timeout=300\n    return True",
      "fix_successful": false,
      "execution_time": 3.8,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_091800",
      "timestamp": "2025-02-12 09:18:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'api_predict_mock.py', line 40, in run_prediction",
      "fix_attempted": "model = load_model('nn_model')\nmodel.predict(...)",
      "fix_successful": false,
      "execution_time": 2.6,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_091900",
      "timestamp": "2025-02-12 09:19:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'calc_ops_mock.py', line 11, in process_calc",
      "fix_attempted": "def process_calc(x, y):\n    return x/y if y!=0 else None",
      "fix_successful": true,
      "execution_time": 2.1,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092000",
      "timestamp": "2025-02-12 09:20:00",
      "error": "Catastrophic meltdown: memory overflow",
      "stack_trace": "File 'aggregator_mock.py', line 88, in load_data",
      "fix_attempted": "def load_data_stream():\n    # stream-based approach",
      "fix_successful": true,
      "execution_time": 4.9,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_092100",
      "timestamp": "2025-02-12 09:21:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 66, in join_data",
      "fix_attempted": "def join_data(a, b):\n    return f'{a}{b}'",
      "fix_successful": true,
      "execution_time": 1.5,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092200",
      "timestamp": "2025-02-12 09:22:00",
      "error": "KeyError: 'profile_id'",
      "stack_trace": "File 'profile_handler_mock.py', line 20, in load_profile",
      "fix_attempted": "def load_profile(d):\n    return d.get('profile_id', 'none')",
      "fix_successful": false,
      "execution_time": 1.8,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_092300",
      "timestamp": "2025-02-12 09:23:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_mock.py', line 39, in test_connect",
      "fix_attempted": "def test_connect():\n    # set connect_timeout=150\n    return True",
      "fix_successful": true,
      "execution_time": 3.3,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092400",
      "timestamp": "2025-02-12 09:24:00",
      "error": "ValueError: invalid literal for int()",
      "stack_trace": "File 'int_parse_mock.py', line 22, in parse_input",
      "fix_attempted": "def parse_input(x):\n    try:\n        return int(x)\n    except:\n        return -999",
      "fix_successful": false,
      "execution_time": 2.4,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_092500",
      "timestamp": "2025-02-12 09:25:00",
      "error": "Catastrophic meltdown: recursion depth exceeded",
      "stack_trace": "File 'deep_call_mock.py', line 110, in infinite_recursion",
      "fix_attempted": "def limit_depth(n):\n    import sys\n    sys.setrecursionlimit(n)",
      "fix_successful": true,
      "execution_time": 4.8,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092600",
      "timestamp": "2025-02-12 09:26:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'math_ops_mock.py', line 78, in safe_div",
      "fix_attempted": "def safe_div(a,b):\n    return a / b if b else 0",
      "fix_successful": true,
      "execution_time": 2.5,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092700",
      "timestamp": "2025-02-12 09:27:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'nn_mock.py', line 50, in run_nn",
      "fix_attempted": "model = build_nn()\nmodel.train(...)",
      "fix_successful": false,
      "execution_time": 2.8,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_092800",
      "timestamp": "2025-02-12 09:28:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_mock.py', line 60, in finalize_connect",
      "fix_attempted": "def finalize_connect():\n    print('Timeout=180')",
      "fix_successful": true,
      "execution_time": 3.0,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_092900",
      "timestamp": "2025-02-12 09:29:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 79, in secure_login",
      "fix_attempted": "def secure_login(data):\n    if 'username' not in data:\n        return 'fail'\n    return 'success'",
      "fix_successful": false,
      "execution_time": 1.7,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_093000",
      "timestamp": "2025-02-12 09:30:00",
      "error": "Catastrophic meltdown: index out of range",
      "stack_trace": "File 'array_ops_mock.py', line 77, in access_data",
      "fix_attempted": "def access_data(arr, i):\n    if i>= len(arr): return None\n    return arr[i]",
      "fix_successful": true,
      "execution_time": 3.9,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093100",
      "timestamp": "2025-02-12 09:31:00",
      "error": "ValueError: invalid literal for int()",
      "stack_trace": "File 'conversion_mock.py', line 44, in safe_int",
      "fix_attempted": "def safe_int(x):\n    try:\n        return int(x)\n    except:\n        return None",
      "fix_successful": true,
      "execution_time": 2.1,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093200",
      "timestamp": "2025-02-12 09:32:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'calc_module_mock.py', line 12, in run_calc",
      "fix_attempted": "def run_calc(a, b):\n    if b==0:return None\n    return a/b",
      "fix_successful": true,
      "execution_time": 2.0,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093300",
      "timestamp": "2025-02-12 09:33:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 99, in combine_any",
      "fix_attempted": "def combine_any(a,b):\n    return str(a) + str(b)",
      "fix_successful": false,
      "execution_time": 1.6,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_093400",
      "timestamp": "2025-02-12 09:34:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'ml_predict_mock.py', line 33, in inference_run",
      "fix_attempted": "model = create_model()\nmodel.run_inference()",
      "fix_successful": true,
      "execution_time": 2.8,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093500",
      "timestamp": "2025-02-12 09:35:00",
      "error": "Catastrophic meltdown: recursion depth exceeded",
      "stack_trace": "File 'deep_call_mock.py', line 150, in infinite_recursion",
      "fix_attempted": "def limit_depth_again():\n    import sys\n    sys.setrecursionlimit(500)",
      "fix_successful": false,
      "execution_time": 4.3,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_093600",
      "timestamp": "2025-02-12 09:36:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_handler_mock.py', line 100, in keep_alive",
      "fix_attempted": "def keep_alive():\n    # set keepalive= True\n    return True",
      "fix_successful": true,
      "execution_time": 3.6,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093700",
      "timestamp": "2025-02-12 09:37:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 101, in final_check",
      "fix_attempted": "def final_check(d):\n    return d.get('username','none')",
      "fix_successful": true,
      "execution_time": 1.9,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093800",
      "timestamp": "2025-02-12 09:38:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 120, in sum_things",
      "fix_attempted": "def sum_things(x, y):\n    return int(x) + int(y)",
      "fix_successful": true,
      "execution_time": 1.4,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_093900",
      "timestamp": "2025-02-12 09:39:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'stats_calc_mock.py', line 22, in compute_stats",
      "fix_attempted": "def compute_stats(vals):\n    if not vals: return None\n    return sum(vals)/len(vals)",
      "fix_successful": true,
      "execution_time": 2.2,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094000",
      "timestamp": "2025-02-12 09:40:00",
      "error": "Catastrophic meltdown: memory overflow",
      "stack_trace": "File 'aggregator_mock.py', line 200, in load_massive_data",
      "fix_attempted": "def load_massive_data(d):\n    # chunk approach\n    pass",
      "fix_successful": false,
      "execution_time": 5.0,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_094100",
      "timestamp": "2025-02-12 09:41:00",
      "error": "ValueError: invalid literal for int()",
      "stack_trace": "File 'convert_mock.py', line 50, in parse_stuff",
      "fix_attempted": "def parse_stuff(x):\n    try:\n        return int(x)\n    except:\n        return 0",
      "fix_successful": true,
      "execution_time": 2.0,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094200",
      "timestamp": "2025-02-12 09:42:00",
      "error": "NameError: name 'model' is not defined",
      "stack_trace": "File 'predict_pipeline_mock.py', line 22, in pipeline_run",
      "fix_attempted": "def pipeline_run():\n    global model\n    model = get_model()\n    return model",
      "fix_successful": true,
      "execution_time": 2.7,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094300",
      "timestamp": "2025-02-12 09:43:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 202, in finalize_auth",
      "fix_attempted": "def finalize_auth(d):\n    if 'username' in d:\n        return True\n    return False",
      "fix_successful": false,
      "execution_time": 1.5,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_094400",
      "timestamp": "2025-02-12 09:44:00",
      "error": "Catastrophic meltdown: index out of range",
      "stack_trace": "File 'array_ops_mock.py', line 155, in get_index",
      "fix_attempted": "def get_index(arr, idx):\n    return arr[idx] if idx < len(arr) else None",
      "fix_successful": false,
      "execution_time": 3.7,
      "resolved": false
    },
    {
      "id": "log_2025-02-12_094500",
      "timestamp": "2025-02-12 09:45:00",
      "error": "ZeroDivisionError: division by zero",
      "stack_trace": "File 'calc_engine_mock.py', line 60, in run_calculation",
      "fix_attempted": "def run_calculation(a,b):\n    return None if b==0 else a/b",
      "fix_successful": true,
      "execution_time": 2.2,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094600",
      "timestamp": "2025-02-12 09:46:00",
      "error": "Database connection timeout",
      "stack_trace": "File 'db_mock.py', line 220, in attempt_connect",
      "fix_attempted": "def attempt_connect():\n    # set connect_timeout=240\n    return True",
      "fix_successful": true,
      "execution_time": 3.9,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094700",
      "timestamp": "2025-02-12 09:47:00",
      "error": "Catastrophic meltdown: recursion depth exceeded",
      "stack_trace": "File 'deep_call_mock.py', line 300, in super_deep",
      "fix_attempted": "def super_deep():\n    import sys\n    sys.setrecursionlimit(750)",
      "fix_successful": true,
      "execution_time": 4.1,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094800",
      "timestamp": "2025-02-12 09:48:00",
      "error": "KeyError: 'username'",
      "stack_trace": "File 'auth_mock.py', line 333, in final_step",
      "fix_attempted": "def final_step(d):\n    return d.get('username','no_user')",
      "fix_successful": true,
      "execution_time": 1.8,
      "resolved": true
    },
    {
      "id": "log_2025-02-12_094900",
      "timestamp": "2025-02-12 09:49:00",
      "error": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
      "stack_trace": "File 'string_ops_mock.py', line 200, in final_combine",
      "fix_attempted": "def final_combine(x, y):\n    return f'{x}{y}'",
      "fix_successful": false,
      "execution_time": 1.7,
      "resolved": false
    }
  ]
  