[
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def divide_numbers(a, b):\nif b == 0:\nprint('Error: Division by zero!')\nreturn None\nreturn a / b",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def authenticate_user(user_data):\nreturn user_data.get('username', 'guest')",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def fix_db_timeout():\nprint('Increased connection timeout to 120s')\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "import joblib\nmodel = joblib.load('models/my_model.pkl')\n# The rest of the code that uses 'model'",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: index out of range",
        "strategy": "def safe_aggregator_search(data, idx):\nif idx < len(data):\nreturn data[idx]\nprint('Index out of range!')\nreturn None",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def calc_ratio(num, den):\nif den == 0: return None\nreturn num / den",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def fix_db_timeout():\nprint('Set connection_timeout=120')\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def login_user(data):\nif 'username' not in data:\ndata['username'] = 'guest'\nreturn data['username']",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def login_user(data):\nreturn data['username']",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "model = load_my_model()\npreds = model.predict(X)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "import joblib\nmodel = joblib.load('model.pkl')\n# re-run the prediction",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def compute_average(vals):\nif len(vals)==0: return 0\nreturn sum(vals)/len(vals)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: index out of range",
        "strategy": "def safe_fetch(data, idx):\nif idx >= len(data):\nreturn None\nreturn data[idx]",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: memory overflow",
        "strategy": "def aggregator_fetch(data):\n# Attempt streaming approach\npass",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def process_data(item):\nif isinstance(item, int):\nreturn item + 10\nreturn None",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def connect_db_with_retry():\n# simulate retry logic\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'session_id'",
        "strategy": "def retrieve_session(data):\nreturn data.get('session_id', None)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def parse_int(val):\ntry:\nreturn int(val)\nexcept:\nreturn 0",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def compute_stats(data):\n# forgot to check for zero\npass",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: recursion depth exceeded",
        "strategy": "def prevent_recursion_depth():\nimport sys\nsys.setrecursionlimit(1000)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def fix_db_timeout_v2():\nprint('Double check firewall')\nreturn False",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "KeyError: 'user_token'",
        "strategy": "def validate_user(data):\nreturn data.get('user_token', 'missing_token')",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: can only concatenate str (not \"int\") to str",
        "strategy": "def combine_data(val1, val2):\nreturn str(val1) + str(val2)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def calc_mean(values):\nif not values:\nreturn 0\nreturn sum(values)/len(values)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: negative array size",
        "strategy": "def create_array(n):\nif n < 0:\nreturn None\nreturn [0]*n",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def divide_numbers(a, b):\nif b == 0: return None\nreturn a / b",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def login_user(data):\nreturn data.get('username', 'guest')",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def fix_db_timeout():\nprint('Timeout set to 120s')\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "import joblib\nmodel = joblib.load('model.pkl')\nprint(model.predict([1,2,3]))",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def combine_data(a, b):\nreturn str(a) + str(b)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def parse_int(val):\ntry:\nreturn int(val)\nexcept ValueError:\nreturn 0",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: memory overflow",
        "strategy": "def handle_data(data):\n# Introduce streaming approach\npass",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def ratio_calc(x, y):\nreturn x / y if y != 0 else None",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: index out of range",
        "strategy": "def fetch_item(arr, idx):\nif idx >= len(arr): return None\nreturn arr[idx]",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def process_user(d):\nif 'username' not in d:\nd['username'] = 'guest'\nreturn d['username']",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def connect_db():\n# add retry\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def parse_data(val):\nreturn int(val) if val.isdigit() else -1",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "def setup_model():\nglobal model\nmodel = load_model()",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def combine_values(a, b):\nreturn str(a) + str(b)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def compute_stat(a, b):\nif b==0: return 0\nreturn a / b",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: recursion depth exceeded",
        "strategy": "def limit_recursion():\nimport sys\nsys.setrecursionlimit(1000)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def authenticate_user(d):\nreturn d.get('username', None)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def open_db():\n# set connect_timeout=300\nreturn True",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "model = load_model('nn_model')\nmodel.predict(...)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def process_calc(x, y):\nreturn x/y if y!=0 else None",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: memory overflow",
        "strategy": "def load_data_stream():\n# stream-based approach",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def join_data(a, b):\nreturn f'{a}{b}'",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'profile_id'",
        "strategy": "def load_profile(d):\nreturn d.get('profile_id', 'none')",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def test_connect():\n# set connect_timeout=150\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def parse_input(x):\ntry:\nreturn int(x)\nexcept:\nreturn -999",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: recursion depth exceeded",
        "strategy": "def limit_depth(n):\nimport sys\nsys.setrecursionlimit(n)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def safe_div(a,b):\nreturn a / b if b else 0",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "model = build_nn()\nmodel.train(...)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def finalize_connect():\nprint('Timeout=180')",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def secure_login(data):\nif 'username' not in data:\nreturn 'fail'\nreturn 'success'",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: index out of range",
        "strategy": "def access_data(arr, i):\nif i>= len(arr): return None\nreturn arr[i]",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def safe_int(x):\ntry:\nreturn int(x)\nexcept:\nreturn None",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def run_calc(a, b):\nif b==0:return None\nreturn a/b",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def combine_any(a,b):\nreturn str(a) + str(b)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "model = create_model()\nmodel.run_inference()",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: recursion depth exceeded",
        "strategy": "def limit_depth_again():\nimport sys\nsys.setrecursionlimit(500)",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def keep_alive():\n# set keepalive= True\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def final_check(d):\nreturn d.get('username','none')",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def sum_things(x, y):\nreturn int(x) + int(y)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def compute_stats(vals):\nif not vals: return None\nreturn sum(vals)/len(vals)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: memory overflow",
        "strategy": "def load_massive_data(d):\n# chunk approach\npass",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "ValueError: invalid literal for int()",
        "strategy": "def parse_stuff(x):\ntry:\nreturn int(x)\nexcept:\nreturn 0",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "NameError: name 'model' is not defined",
        "strategy": "def pipeline_run():\nglobal model\nmodel = get_model()\nreturn model",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def finalize_auth(d):\nif 'username' in d:\nreturn True\nreturn False",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "Catastrophic meltdown: index out of range",
        "strategy": "def get_index(arr, idx):\nreturn arr[idx] if idx < len(arr) else None",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    },
    {
        "error_type": "ZeroDivisionError: division by zero",
        "strategy": "def run_calculation(a,b):\nreturn None if b==0 else a/b",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Database connection timeout",
        "strategy": "def attempt_connect():\n# set connect_timeout=240\nreturn True",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "Catastrophic meltdown: recursion depth exceeded",
        "strategy": "def super_deep():\nimport sys\nsys.setrecursionlimit(750)",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "KeyError: 'username'",
        "strategy": "def final_step(d):\nreturn d.get('username','no_user')",
        "attempts": 1,
        "successful_fixes": 1,
        "success_rate": 1.0
    },
    {
        "error_type": "TypeError: unsupported operand type(s) for +: 'str' and 'int'",
        "strategy": "def final_combine(x, y):\nreturn f'{x}{y}'",
        "attempts": 1,
        "successful_fixes": 0,
        "success_rate": 0.0
    }
]